CREATE OR REPLACE TABLE team_mapping (
  team_manager_role STRING,
  team_code STRING
);

INSERT INTO team_mapping
VALUES(
'CSK_MANAGER', 'CSK'
),
('DCH_MANAGER','DCH'),
('KXIP_MANAGER','KXIP'),
('KKR_MANAGER','KKR'),
('MI_MANAGER','MI'),
('RR_MANAGER','RR'),
('RCB_MANAGER','RCB'),
('SRH_MANAGER','SRH'),
('KTK_MANAGER','KTK'),
('PWI_MANAGER','PWI'),
('RPS_MANAGER','RPS'),
('GL_MANAGER','GL'),
('DC_MANAGER','DC');



CREATE OR REPLACE ROLE CSK_MANAGER;
CREATE OR REPLACE ROLE DCH_MANAGER;
CREATE OR REPLACE ROLE KXIP_MANAGER;
CREATE OR REPLACE ROLE KKR_MANAGER;
CREATE OR REPLACE ROLE MI_MANAGER;
CREATE OR REPLACE ROLE RR_MANAGER;
CREATE OR REPLACE ROLE RCB_MANAGER;
CREATE OR REPLACE ROLE SRH_MANAGER;
CREATE OR REPLACE ROLE KTK_MANAGER;
CREATE OR REPLACE ROLE PWI_MANAGER;
CREATE OR REPLACE ROLE RPS_MANAGER;
CREATE OR REPLACE ROLE GL_MANAGER;
CREATE OR REPLACE ROLE DC_MANAGER;


-- Grant usage and select privileges for different roles

GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE CSK_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE CSK_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE CSK_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE CSK_MANAGER;

-- For DCH_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE DCH_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE DCH_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE DCH_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE DCH_MANAGER;

-- For KXIP_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE KXIP_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE KXIP_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE KXIP_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE KXIP_MANAGER;

-- For KKR_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE KKR_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE KKR_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE KKR_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE KKR_MANAGER;

-- For MI_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE MI_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE MI_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE MI_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE MI_MANAGER;

-- For RR_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE RR_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE RR_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE RR_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE RR_MANAGER;

-- For RCB_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE RCB_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE RCB_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE RCB_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE RCB_MANAGER;

-- For SRH_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE SRH_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE SRH_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE SRH_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE SRH_MANAGER;

-- For KTK_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE KTK_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE KTK_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE KTK_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE KTK_MANAGER;

-- For PWI_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE PWI_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE PWI_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE PWI_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE PWI_MANAGER;

-- For RPS_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE RPS_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE RPS_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE RPS_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE RPS_MANAGER;

-- For GL_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE GL_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE GL_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE GL_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE GL_MANAGER;

-- For DC_MANAGER
GRANT USAGE ON WAREHOUSE compute_wh TO ROLE DC_MANAGER;
GRANT USAGE ON DATABASE DW_IPL TO ROLE DC_MANAGER;
GRANT USAGE ON SCHEMA IPL_ETL TO ROLE DC_MANAGER;
GRANT SELECT ON ALL TABLES IN SCHEMA IPL_ETL TO ROLE DC_MANAGER;


GRANT ROLE CSK_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE DCH_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE KXIP_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE KKR_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE MI_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE RR_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE RCB_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE SRH_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE KTK_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE PWI_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE RPS_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE GL_MANAGER TO USER NIKHILKUMAR;
GRANT ROLE DC_MANAGER TO USER NIKHILKUMAR;
--======================================

alter table dim_teams drop row access policy rls_team_policy;
alter table dim_players drop row access policy rls_team_policy;



create or replace row access policy rls_team_policy as (team STRING) returns boolean ->
'ACCOUNTADMIN' = current_user()
or exists (
select 1 from team_mapping
where team_manager_role = current_role()
and team_code = trim(team)
);

--ROW LEVEL MASKING FOR DIM_TEAMS
alter table dim_teams add row access policy rls_team_policy on (team_code);

--ROW LEVEL MASKING FOR dim_players
alter table dim_players add row access policy rls_team_policy on (team_code);

-- use role RCB_MANAGER;
--SELECT * FROM DIM_PLAYERS;
-- SELECT * FROM DIM_TEAMS;
--======================================

alter table dim_matches drop row access policy rls_team_policy1;

--Row level masking policy for dim_matches
create or replace row access policy rls_team_policy1 as (team1 STRING, team2 STRING) returns boolean ->
'ACCOUNTADMIN' = current_user()
or exists (
select 1 from team_mapping
where team_manager_role = current_role()
and team_code IN (trim(team1), trim(team2))
);

alter table dim_matches add row access policy rls_team_policy1 on (team_A_code,team_B_code);
--alter table dim_matches drop row access policy rls_team_policy1 ;


-- use role RCB_MANAGER;
-- SELECT * FROM dim_matches;

--===================================================

ALTER TABLE IF EXISTS dim_players MODIFY COLUMN player_name UNSET MASKING POLICY;

--Column Level Masking for Players
CREATE OR REPLACE MASKING POLICY mask_player AS(val VARCHAR) RETURNS VARCHAR ->
CASE WHEN CURRENT_ROLE() IN ('CSK_MANAGER','DCH_MANAGER','KXIP_MANAGER',    
'KKR_MANAGER','MI_MANAGER','RR_MANAGER','RCB_MANAGER','SRH_MANAGER','KTK_MANAGER','PWI_MANAGER','RPS_MANAGER','GL_MANAGER','DC_MANAGER') 
    THEN
        REGEXP_REPLACE(val, '\\b(\\w)\\w*(\\w)\\b', '\\1***\\2', 1, 0, 'i')
ELSE val END;


ALTER TABLE IF EXISTS dim_players MODIFY COLUMN player_name SET MASKING POLICY mask_player;

USE ROLE RCB_MANAGER;
SELECT * FROM dim_players;

